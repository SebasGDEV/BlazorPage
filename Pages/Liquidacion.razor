@page "/liquidacion"
@inject IJSRuntime js


<center><h1>     Calculadora de Liquidación    </h1>
<div class="contenedorcalculadora" >


    <br>  <br>
    <MatTextField id="txtSalarioMensual" @bind-Value="@SalarioMensual" Dense="true" Label="Salario Mensual" Outlined="true"
    style="width:-webkit-fill-available;" Required="true" ></MatTextField>
    <br><br>
    <MatTextField id="txtDiasdeVacaciones" @bind-Value="@DiasdeVacaciones" Dense="true" Label="Dias de Vacaciones" Outlined="true"
    style="width:-webkit-fill-available;" Required="true" ></MatTextField>
    <br><br>
    <MatDatePicker id="FechaIniciodeLabores" Label="Fecha inicio de labores" Required="true" @bind-Value="@FechaInicio" Outlined="true"
    style="width:-webkit-fill-available;" EnableWeekNumbers="true"></MatDatePicker>
    <br><br>
    <div class="contenedor" >
    <MatButton Raised="true" style="width: 6rem;" @onclick="@LimpiarFormulario">Limpiar</MatButton>
    <MatButton Raised="true" style="width: 13rem;" @onclick="@sumar">Calcular</MatButton>
    </div>


</div>
</center>


@code
{
     string DiasdeVacaciones;
     string SalarioMensual;
     DateTime FechaInicio, FechaHoy;
     double salarioDiario=0,  pagoVacaciones=0, noventaDiasSalario=0, doceDiasSalario=0, aguinaldo=0,
     _salarioMensual, _diasdeVacaciones;
     

    @* Captura del salario menssual para sacar el diario *@

    public void sumar(){
        @* Conversiones a Int *@
        _salarioMensual = Convert.ToDouble(SalarioMensual);
        _diasdeVacaciones=Convert.ToDouble(DiasdeVacaciones);

        @* Procesamiento de fechas *@
        FechaHoy=DateTime.Now;
        Console.WriteLine(FechaHoy.ToString("MM/dd/yyyy"));
        Console.WriteLine("Proceamiento de las fechas");
        var yearsOld = FechaHoy - FechaInicio;
        Console.WriteLine("Dias del test");
        Console.WriteLine(yearsOld);
        int years = (int)(yearsOld.TotalDays / 365.25);
        int months = (int)(((yearsOld.TotalDays / 365.25) - years) * 12);
        int dayss= (int)(( ( ( ( yearsOld.TotalDays / 365.25) - years) * 12)-months)*30.5);
        Console.WriteLine("RESULTADO");
        Console.WriteLine("Años");
        Console.WriteLine(years);
        Console.WriteLine("Meses");
        Console.WriteLine(months);
        Console.WriteLine("Dias");
        Console.WriteLine(dayss);
        Console.WriteLine("TERMINA TEST");
        @* TESTTTTTTT TERMINA *@


        @* Procesamiento de los datos *@

        @* Salario DIARIO *@
        Console.WriteLine(_salarioMensual);
        salarioDiario=(_salarioMensual/30);
        Console.WriteLine("El salario diario es");
        Console.WriteLine(salarioDiario);

        @* VACACIONES *@
        pagoVacaciones=salarioDiario*_diasdeVacaciones;
        Console.WriteLine("Pago de vacaciones: "+ pagoVacaciones);

        @* 90 DIAS DEL SALARIO *@
        noventaDiasSalario=salarioDiario*90;
        Console.WriteLine("90 dias de salario: "+ noventaDiasSalario);

        @* 12 DIAS DEL SALARIO *@
        doceDiasSalario=salarioDiario*12*years;
        Console.WriteLine("12 dias de salario: "+ doceDiasSalario);

        @* AGUINALDO = 15 dias de salario *@
        aguinaldo=salarioDiario*15;
        Console.WriteLine("Aguinaldo es: "+aguinaldo);


        @* TOTAL DE LA LIQUIDACIÓN *@



         
    }




/*Utilidades*/

        private void LimpiarFormulario()
        {
        DiasdeVacaciones=string.Empty;
        SalarioMensual=string.Empty;
        FechaInicio=DateTime.Now;
        }
    
        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await js.InvokeVoidAsync("focusById", "txtSalarioMensual");
            }
        }

}