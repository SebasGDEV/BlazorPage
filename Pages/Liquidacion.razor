@page "/liquidacion"
@inject IJSRuntime js


<center><h1>     Calculadora de Liquidaci√≥n    </h1>
<div class="contenedorcalculadora" >


    <br>  <br>
    <MatTextField id="txtSalarioMensual" @bind-Value="@SalarioMensual" Dense="true" Label="Salario Mensual" Outlined="true"
    style="width:-webkit-fill-available;" Required="true" ></MatTextField>
    <br><br>
    <MatTextField id="txtDiasdeVacaciones" @bind-Value="@DiasdeVacaciones" Dense="true" Label="Dias de Vacaciones" Outlined="true"
    style="width:-webkit-fill-available;" Required="true" ></MatTextField>
    <br><br>
    <MatDatePicker id="FechaIniciodeLabores" Label="Fecha inicio de labores" Required="true" @bind-Value="@FechaInicio" Outlined="true"
    style="width:-webkit-fill-available;" EnableWeekNumbers="true"></MatDatePicker>
    <br><br>
    <div class="contenedor" >
    <MatButton Raised="true" style="width: 6rem;" @onclick="@LimpiarFormulario">Limpiar</MatButton>
    <MatButton Raised="true" style="width: 13rem;">Calcular</MatButton>
    </div>
    <MatBlazor.MatH1>sjuh</MatBlazor.MatH1>


</div>
</center>


@code
{
     string DiasdeVacaciones;
     string SalarioMensual;
   
     DateTime FechaInicio;
    


/*Utilidades*/

        private void LimpiarFormulario(){
        DiasdeVacaciones=string.Empty;
        SalarioMensual=string.Empty;
        FechaInicio=DateTime.Now;
        
        

        }
    
        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await js.InvokeVoidAsync("focusById", "txtSalarioMensual");
            }
        }

}